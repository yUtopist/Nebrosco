[{"F:\\WEB\\UTOPIA\\src\\index.js":"1","F:\\WEB\\UTOPIA\\src\\reportWebVitals.js":"2","F:\\WEB\\UTOPIA\\src\\App.js":"3","F:\\WEB\\UTOPIA\\src\\components\\Options.js":"4","F:\\WEB\\UTOPIA\\src\\components\\modules\\IconData.js":"5","F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\ModelSettings.js":"6","F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\Model.js":"7","F:\\WEB\\UTOPIA\\src\\components\\Modules\\IconData.js":"8","F:\\WEB\\UTOPIA\\src\\components\\Modules\\Badge.js":"9","F:\\WEB\\UTOPIA\\src\\components\\Modules\\TextField.js":"10","F:\\WEB\\UTOPIA\\src\\components\\Modules\\Empty.js":"11","F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\ModelNotation.js":"12","F:\\WEB\\UTOPIA\\src\\components\\Modules\\Icon.js":"13","F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\ModelList.js":"14","F:\\WEB\\UTOPIA\\src\\components\\TestingComponents\\Tester.js":"15","F:\\WEB\\UTOPIA\\src\\components\\TestingComponents\\TesterArray.js":"16","F:\\WEB\\UTOPIA\\src\\components\\TestingComponents\\TestingLine.js":"17","F:\\WEB\\UTOPIA\\src\\components\\Menu.tsx":"18","F:\\WEB\\UTOPIA\\src\\components\\Tracker.tsx":"19"},{"size":500,"mtime":1608087242279,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":289,"mtime":1608090688062,"results":"23","hashOfConfig":"21"},{"size":4751,"mtime":1607335561226,"results":"24","hashOfConfig":"21"},{"size":1611,"mtime":1607312526048,"results":"25","hashOfConfig":"21"},{"size":905,"mtime":1608035382611,"results":"26","hashOfConfig":"21"},{"size":1814,"mtime":1608035331838,"results":"27","hashOfConfig":"21"},{"size":1677,"mtime":1607428161918,"results":"28","hashOfConfig":"21"},{"size":1179,"mtime":1607481537535,"results":"29","hashOfConfig":"21"},{"size":2291,"mtime":1607480979375,"results":"30","hashOfConfig":"21"},{"size":1762,"mtime":1607481083864,"results":"31","hashOfConfig":"21"},{"size":3274,"mtime":1608035561297,"results":"32","hashOfConfig":"21"},{"size":1773,"mtime":1607558992371,"results":"33","hashOfConfig":"21"},{"size":2485,"mtime":1608035647872,"results":"34","hashOfConfig":"21"},{"size":1066,"mtime":1608029929784,"results":"35","hashOfConfig":"21"},{"size":33237,"mtime":1608030389712,"results":"36","hashOfConfig":"21"},{"size":2842,"mtime":1608029947328,"results":"37","hashOfConfig":"21"},{"size":135,"mtime":1608090650451,"results":"38","hashOfConfig":"21"},{"size":144,"mtime":1608090696996,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"189k7o",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\WEB\\UTOPIA\\src\\index.js",[],"F:\\WEB\\UTOPIA\\src\\reportWebVitals.js",[],["84","85"],"F:\\WEB\\UTOPIA\\src\\App.js",["86"],"F:\\WEB\\UTOPIA\\src\\components\\Options.js",["87","88","89"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport Icon from './Modules/Icon';\r\n\r\n// Click outside the element function \r\nfunction useOuterClick(callback) {\r\n\tconst innerRef = useRef();\r\n\tconst callbackRef = useRef();\r\n\r\n\t// set current callback in ref, before second useEffect uses it\r\n\tuseEffect(() => { // useEffect wrapper to be safe for concurrent mode\r\n\t\tcallbackRef.current = callback;\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('click', handleClick);\r\n\t\treturn () => document.removeEventListener('click', handleClick);\r\n\r\n\t\tfunction handleClick(e) {\r\n\t\t\tif (innerRef.current && callbackRef.current && !innerRef.current.contains(e.target)) {\r\n\t\t\t\tcallbackRef.current(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\treturn innerRef;\r\n}\r\n//======================================================================================================\r\n\r\nconst TitleBar = () => {\r\n\tconst [seachFocused, setSeachFocused] = useState(false);\r\n\tconst searchField = useRef();\r\n\r\n\treturn (\r\n\t\t<div style={\r\n\t\t\t{\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\theight: '60px',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tbackgroundColor: '#3D3B5B'\r\n\t\t\t}\r\n\t\t}>\r\n\t\t\t<h6>Task Model Settings</h6>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst Content = () => {\r\n\tconst modelArray = [\r\n\t\t{\r\n\t\t\ttype: 'Badge'\r\n\t\t}\r\n\t];\r\n\tconst [customArray, setCustomArray] = useState(modelArray);\r\n\tconst [menuFocused, setMenuFocused] = useState(false);\r\n\r\n\tconst Model = (input) => {\r\n\t\tconst custonText =  input['type'];\r\n\r\n\t\treturn (\r\n\t\t\t<div style={\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\twidth: '1000px',\r\n\t\t\t\t\theight: '40px',\r\n\t\t\t\t\tbackgroundColor: '#2E2C43',\r\n\t\t\t\t\tmarginTop: '2em',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}\r\n\t\t\t}>\r\n\t\t\t\t<button className='button-ghost' style={\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\tbackgroundColor: 'gray',\r\n\t\t\t\t\t\tcolor: '#E8E9F3',\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\tonClick={() => setMenuFocused(!menuFocused)} >\r\n\t\t\t\t\t<Icon icon='tickCircle' />\r\n\t\t\t\t\t<h6> {custonText} </h6>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{ menuFocused ? (\r\n\t\t\t\t\t<div style={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\ttop: '40px',\r\n\t\t\t\t\t\t\twidth: 'auto',\r\n\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\tbackgroundColor: ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t\t<button className='button-ghost' style={\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#272635',\r\n\t\t\t\t\t\t\t\tcolor: '#E8E9F3',\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<Icon icon='tickCircle' />\r\n\t\t\t\t\t\t\t<h6> Badge </h6>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className='button-ghost' style={\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#272635',\r\n\t\t\t\t\t\t\t\tcolor: '#E8E9F3',\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<Icon icon='tickCircle' />\r\n\t\t\t\t\t\t\t<h6> Icon </h6>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className='button-ghost' style={\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#272635',\r\n\t\t\t\t\t\t\t\tcolor: '#E8E9F3',\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<Icon icon='tickCircle' />\r\n\t\t\t\t\t\t\t<h6> Text </h6>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (null)}\r\n\t\t\t\t<h6> {custonText} </h6>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={\r\n\t\t\t{\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\theight: '100%',\r\n\t\t\t\tminHeight: '60px',\r\n\t\t\t\tbackgroundColor: '#535077',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tflexDirection: 'column'\r\n\t\t\t}\r\n\t\t}>\r\n\t\t\t<div style={\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: '1000px',\r\n\t\t\t\t\theight: '40px',\r\n\t\t\t\t\tbackgroundColor: '#3D3B5B',\r\n\t\t\t\t\tmarginTop: '2em'\r\n\t\t\t\t}\r\n\t\t\t}>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t{ customArray.map((element) => <Model type={element.type} />)}\r\n\r\n\t\t\t<button className='button-ghost' style={\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\theight: '40px',\r\n\t\t\t\t\tbackgroundColor: '#2E2C43',\r\n\t\t\t\t\tmarginTop: '2em',\r\n\t\t\t\t\tcolor: '#E8E9F3'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\tonClick={() => setCustomArray([...customArray, { type: 'funny' }])}\r\n\t\t\t>\r\n\t\t\t\t<h6>Add Element</h6>\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst Options = () => {\r\n\tconst innerRef = useOuterClick(e => {\r\n\t\t// OUTSIDE CLICK HANDLER\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div ref={innerRef}\r\n\t\t\tstyle={\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: '1100px',\r\n\t\t\t\t\theight: '700px'\r\n\t\t\t\t}\r\n\t\t\t}>\r\n\t\t\t<TitleBar />\r\n\t\t\t<Content />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Options;\r\n",["90","91"],"F:\\WEB\\UTOPIA\\src\\components\\modules\\IconData.js",[],["92","93"],"F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\ModelSettings.js",[],"F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\Model.js",["94"],"import React, { useState } from 'react';\r\nimport Icon from '../Modules/Icon';\r\nimport Badge from '../Modules/Badge';\r\nimport Empty from '../Modules/Empty';\r\nimport TextField from '../Modules/TextField';\r\nimport ModelNotation from '../ModelSettings/ModelNotation';\r\n\r\nconst Model = (input) => {\r\n\tconst inputArray = input['array'];\r\n\r\n\tlet modelElementCount = 1;\r\n\tconst CreateModelElement = (_input, _count) => {\r\n\t\tmodelElementCount++;\r\n\t\tconst modelElementLetter = String.fromCharCode(_count + 64);\r\n\r\n\t\tswitch (_input.type) {\r\n\t\t\tcase 'Badge':\r\n\t\t\t\treturn (<Badge data={_input.data} notationType='model' notation={modelElementLetter} />)\r\n\t\t\tcase 'Icon':\r\n\t\t\t\treturn (<Icon data={_input.data} notationType='model' notation={modelElementLetter} />)\r\n\t\t\tcase 'TextField':\r\n\t\t\t\treturn (<TextField data={_input.data} notationType='model' notation={modelElementLetter} />)\r\n\t\t\tcase 'Empty':\r\n\t\t\t\treturn (<Empty data={_input.data} notationType='model' notation={modelElementLetter} />)\r\n\t\t\tcase 'MarginRight':\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\tjustifySelf: 'center',\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tjustifyContent: 'flex-end',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\tflex: '1'\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<ModelNotation mode='modelRight' />\r\n\t\t\t\t\t\t{ _input.data.map((object) => CreateModelElement(object, modelElementCount - 1))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t// Rendering\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='Model'\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'flex-start',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\theight: '40px',\r\n\t\t\t\tbackgroundColor: '#3D3B5B'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{inputArray.map((object) => CreateModelElement(object, modelElementCount))}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Model;\r\n","F:\\WEB\\UTOPIA\\src\\components\\Modules\\IconData.js",[],"F:\\WEB\\UTOPIA\\src\\components\\Modules\\Badge.js",[],"F:\\WEB\\UTOPIA\\src\\components\\Modules\\TextField.js",[],"F:\\WEB\\UTOPIA\\src\\components\\Modules\\Empty.js",[],"F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\ModelNotation.js",[],"F:\\WEB\\UTOPIA\\src\\components\\Modules\\Icon.js",[],"F:\\WEB\\UTOPIA\\src\\components\\ModelSettings\\ModelList.js",["95","96","97"],"import React, { useState } from 'react';\r\nimport Icon from '../Modules/Icon';\r\nimport Badge from '../Modules/Badge';\r\nimport Empty from '../Modules/Empty';\r\nimport TextField from '../Modules/TextField';\r\nimport ModelNotation from '../ModelSettings/ModelNotation';\r\n\r\nconst ModelList = (input) => {\r\n  const inputArray = input['array'];\r\n\r\n  let modelElementCount = 1;\r\n  const ModelElement = (_input, _count) => {\r\n    modelElementCount++;\r\n    const modelElementLetter = String.fromCharCode(_count + 64);\r\n\r\n    return (\r\n      <div style={{\r\n        position: 'relative',\r\n        width: '1200px',\r\n        height: '150px',\r\n        backgroundColor: '#3D3B5B',\r\n        marginBottom: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n      }}>\r\n        <ModelNotation mode='modelListElement' />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const CreateModelElement = (_input, _count) => {\r\n    modelElementCount++;\r\n    const modelElementLetter = String.fromCharCode(_count + 64);\r\n\r\n    switch (_input.type) {\r\n      case 'Badge':\r\n        return (<Badge data={_input.data} mode='modelElement' notation={modelElementLetter} />)\r\n      case 'Icon':\r\n        return (<Icon data={_input.data} mode='modelElement' notation={modelElementLetter} />)\r\n      case 'TextField':\r\n        return (<TextField data={_input.data} mode='modelElement' notation={modelElementLetter} />)\r\n      case 'Empty':\r\n        return (<Empty data={_input.data} mode='modelElement' notation={modelElementLetter} />)\r\n      case 'MarginRight':\r\n        return (\r\n          <div style={{\r\n            position: 'relative',\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            height: '100%',\r\n            flex: '1'\r\n          }}>\r\n            <ModelNotation mode='modelElement' />\r\n            { _input.data.map((object) => CreateModelElement(object, modelElementCount - 1))}\r\n          </div>\r\n        )\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  // Rendering\r\n  return (\r\n    <div className='ModelList'\r\n      style={{\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        width: '1300px',\r\n        height: 'auto',\r\n        marginTop: '50px'\r\n      }}\r\n    >\r\n      {inputArray.map((object) => ModelElement(object, modelElementCount))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModelList;","F:\\WEB\\UTOPIA\\src\\components\\TestingComponents\\Tester.js",["98"],"F:\\WEB\\UTOPIA\\src\\components\\TestingComponents\\TesterArray.js",[],"F:\\WEB\\UTOPIA\\src\\components\\TestingComponents\\TestingLine.js",["99","100","101"],"F:\\WEB\\UTOPIA\\src\\components\\Menu.tsx",[],"F:\\WEB\\UTOPIA\\src\\components\\Tracker.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":29,"column":9,"nodeType":"108","messageId":"109","endLine":29,"endColumn":21},{"ruleId":"106","severity":1,"message":"111","line":29,"column":23,"nodeType":"108","messageId":"109","endLine":29,"endColumn":38},{"ruleId":"106","severity":1,"message":"112","line":30,"column":8,"nodeType":"108","messageId":"109","endLine":30,"endColumn":19},{"ruleId":"102","replacedBy":"113"},{"ruleId":"104","replacedBy":"114"},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","severity":1,"message":"117","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"117","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"118","line":14,"column":11,"nodeType":"108","messageId":"109","endLine":14,"endColumn":29},{"ruleId":"106","severity":1,"message":"119","line":56,"column":43,"nodeType":"108","messageId":"109","endLine":56,"endColumn":61},{"ruleId":"106","severity":1,"message":"117","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"120","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":63,"column":26,"nodeType":"123","messageId":"124","endLine":63,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":67,"column":26,"nodeType":"123","messageId":"124","endLine":67,"endColumn":28},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'ModelSettings' is defined but never used.","Identifier","unusedVar","'seachFocused' is assigned a value but never used.","'setSeachFocused' is assigned a value but never used.","'searchField' is assigned a value but never used.",["125"],["126"],["125"],["126"],"'useState' is defined but never used.","'modelElementLetter' is assigned a value but never used.","'CreateModelElement' is assigned a value but never used.","'fchown' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]